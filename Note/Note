1. Chu y loi thay giang
2. rake routes de tim routes, sau do ung routes do voi link_to

In book controller:
    before_action :authenticate_user!

To generate log_out:  
    <%= link_to "ログアウト", destroy_user_session_path, method: :delete %>
        
Set image:
    Cac file cần chỉnh:
    book controller, book_params:
        params.require(:book).permit(:title, :number_of_pages, :image)
        
Thêm trường name và age:
    db -> migrate
    chỉnh trong file file add_name and age:
    
class AddNameAndAge < ActiveRecord::Migration[6.0]
  def change
    add_column :users, :name, :string
    add_column :users, :age, :integer
    add_index :users, :name, unique: true
  end
end

Trong models -> user.rb
  validates_presence_of :name
  validates_presence_of :age


application controller:
class ApplicationController < ActionController::Base
	before_action :configure_permitted_parameters, if: :devise_controller?

      protected
         def configure_permitted_parameters
             devise_parameter_sanitizer.permit :sign_up, keys: [:name, :age, :avatar]
             devise_parameter_sanitizer.permit :account_update, keys: [:name, :age, :avatar]
         end
end

class UsersController < ApplicationController
  def show
    @user = current_user
  end
end


avatar:
models -> user.rb
    has_one_attached :avatar
    
    <h1>プロフィール</h1>
   <% if @current_user.avatar.attached? %>
     <%= image_tag @current_user.avatar %>
   <% end %>
   
   ----------------------------------
   Thêm trường detail:
   In migrate: add file - file will add new colulmn
   add_column :books, :detail, :text
   
   In book controller:
    params.require(:book).permit(:title, :number_of_pages, :detail, :image)

   Nếu thêm trường mới mà ko đc (trong schema nó không hiển thị) => xóa database đi thử lại
   rails db:drop
   rails db:create
   rails db:migrate
    ----------------------------------
    
    Về cách thêm book review:
    In book controller:
    def show
    @book_review = BookReview.new
  end
  
  Trong file book/show:
   <h2>Review Form</h2>
 <%= form_with(model: @book_review, local: true) do |form| %>

  <div class="field">
    <%= form.label :review %>
    <%= form.text_area :review %>
    
    <%=form.hidden_field :book_id, :value => @book.id %>
  </div>
  ---------------------------------
  
  Giờ để hiển thị tất cả các review không phải hiện thị trên đường dẫn @book_review nữa
  Mà hiển thị trên đường dẫn của cuốn sách đó:         url = "/books/" + @book_review.book_id.to_s
  
    def create
    @book_review = BookReview.new(book_review_params)

    respond_to do |format|
      if @book_review.save
        url = "/books/" + @book_review.book_id.to_s
        format.html { redirect_to url, notice: 'Book review was successfully created.' }
        format.json { render :show, status: :created, location: @book_review }
      else
        format.html { render :new }
        format.json { render json: @book_review.errors, status: :unprocessable_entity }
      end
    end
  end
  
In model/book:  
  has_many :book_review, -> { order "created_at DESC" }
  => 1 book có nhiều book_review, sắp xếp theo DES

In views/book/show
  <h2>Review List</h2>
<ul>
    <% @book.book_review.each do |book_review| %>
    <li>
        <%= book_review.review %>
        (<i><%= book_review.user.id %></i>)
    </li>
    <% end %>
</ul>
  ---------------------------------------------
  
add name to review list

model/book
class BookReview < ApplicationRecord
    belongs_to :user
end

In book_view controller
    @book_review.user_id = current_user.id
